name: CI
on: push

env:
  IMAGE_NAME: ghcr.io/zxcvve/get-a-job
  IMAGE_TAG: latest
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install node modules
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          env: |
            SUPABASE_KEY=${{secrets.SUPABASE_KEY}}
            SUPABASE_URL=${{secrets.SUPABASE_URL}}
            SUPERJOB_ID=${{secrets.SUPERJOB_ID}}
            SUPERJOB_KEY=${{secrets.SUPERJOB_KEY}} 

#  deploy:
#    needs: docker
#    environment: get-a-job
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy using ssh
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          port: 22
#          script: |
#            docker stop air_app
#            docker rm air_app
#            docker rmi -f ghcr.io/zxcvve/air_app
#            docker pull ghcr.io/zxcvve/air_app:latest
#            docker run -e DB_HOST=${{secrets.DB_HOST}} \
#            -e DB_PASSWORD=${{secrets.DB_PASSWORD}} \
#            -e DB_USER=${{secrets.DB_USER}} \
#            -e DB_NAME=${{secrets.DB_NAME}} \
#            -e SESSION_PASSWORD=${{secrets.SESSION_PASSWORD}} \
#            -e URL=${{secrets.URL}} \
#            -e TZ=Europe/Moscow \
#            -d -p 3000:3000 --name air_app ghcr.io/zxcvve/air_app:latest
